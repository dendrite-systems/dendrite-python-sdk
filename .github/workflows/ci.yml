name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
    - main


jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          pipx install poetry
          poetry install --dev

      - name: Linting with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 dendrite_sdk/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
      - name: Linting with pylint
        run: poetry run pylint dendrite_sdk/ --errors-only

  test:
    - name: tests
      run: pytest --tracing=retain-on-failure
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-traces
        path: test-results/